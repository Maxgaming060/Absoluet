"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),discord_js_1=require("discord.js"),TicketModel_1=tslib_1.__importDefault(require("../models/TicketModel")),replaceAll_1=tslib_1.__importDefault(require("./replaceAll")),__1=require(".."),ms_1=tslib_1.__importDefault(require("ms")),activityFormat={playing:discord_js_1.ActivityType.Playing,watching:discord_js_1.ActivityType.Watching,listening:discord_js_1.ActivityType.Listening,competing:discord_js_1.ActivityType.Competing},statusFormat={online:discord_js_1.PresenceUpdateStatus.Online,dnd:discord_js_1.PresenceUpdateStatus.DoNotDisturb,invisible:discord_js_1.PresenceUpdateStatus.Invisible,offline:discord_js_1.PresenceUpdateStatus.Offline};function parseActivity(t){return activityFormat[t.toLowerCase()]||discord_js_1.ActivityType.Playing}function parseStatus(t){return statusFormat[t.toLowerCase()]||discord_js_1.PresenceUpdateStatus.Online}let tickets=0,position=0;function nextStatus(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){position>__1.client.config.ActivitySettings.Activities.length-1&&(position=0);const t=__1.client.config.ActivitySettings.Activities[position];return position++,t[1].includes("{tickets}")&&(tickets=(yield TicketModel_1.default.find()).length),__1.client.user.setPresence({activities:[{type:parseActivity(t[0]),name:(0,replaceAll_1.default)(t[1],{"{members}":__1.client.users.cache.size,"{servers}":__1.client.guilds.cache.size,"{channels}":__1.client.channels.cache.size,"{emojis}":__1.client.emojis.cache.size,"{uptime}":(0,ms_1.default)((null===__1.client||void 0===__1.client?void 0:__1.client.uptime)||Date.now(),{long:!0}),"{tickets}":tickets||0})}],status:parseStatus(t[2])})}))}function handleActivities(){__1.client.config.ActivitySettings.Enabled&&(nextStatus(),setInterval(nextStatus,(0,ms_1.default)(__1.client.config.ActivitySettings.Interval)))}exports.default=handleActivities;