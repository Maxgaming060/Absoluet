"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),discord_js_1=require("discord.js"),messageUtils_1=require("../../helpers/messageUtils"),Command_1=require("../../structures/Command"),replaceAll_1=tslib_1.__importDefault(require("../../helpers/replaceAll")),querys_1=require("../../helpers/querys");function manageVoiceChannelsCategory({client:e,interaction:n}){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const t=n.options.getSubcommand();if("send"===t){const t=n.options.getChannel("channel",!1,[discord_js_1.ChannelType.GuildText])||n.channel;yield t.send((0,messageUtils_1.generateInterfaceEmbed)(e))}if("setup"===t){const t=yield(0,querys_1.guilds)().get(n.guildId);if(t.generatorChannel)return n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("A generator channel already exists").setDescription("Use the command /manage voice-channels delete").setColor("Red")],ephemeral:!0});const s=yield n.guild.channels.create({name:"voice channels",type:discord_js_1.ChannelType.GuildCategory}),i=yield n.guild.channels.create({name:"interface",type:discord_js_1.ChannelType.GuildText,parent:s.id}),o=yield n.guild.channels.create({name:"âž• Generator",type:discord_js_1.ChannelType.GuildVoice,parent:s.id});t.generatorChannel=o.id,yield t.save(),yield i.send((0,messageUtils_1.generateInterfaceEmbed)(e)),yield n.reply({embeds:[(new discord_js_1.EmbedBuilder).setColor(e.config.GeneralSettings.EmbedColor).setTitle("All the channels has been created correctly")]})}if("delete"===t){const t=yield(0,querys_1.guilds)().get(n.guildId),s=n.guild.channels.cache.get(t.generatorChannel);s&&s.delete().catch((e=>e)),t.generatorChannel=null,yield t.save(),yield n.reply({embeds:[(new discord_js_1.EmbedBuilder).setColor(e.config.GeneralSettings.EmbedColor).setTitle("The channel has been deleted correctly")]})}}))}function manageStatsChannels({client:e,interaction:n}){var t,s;return tslib_1.__awaiter(this,void 0,void 0,(function*(){const i=n.options.getSubcommand();if("setup"===i){yield n.deferReply();const t=n.options.getInteger("channel"),s=yield(0,querys_1.guilds)().get(n.guildId);if(!s)return n.followUp({embeds:[(new discord_js_1.EmbedBuilder).setTitle("I can't find this server in my db, use the command /setup").setColor("Red")],ephemeral:!0});const i=[],o=yield n.guild.channels.create({name:"ðŸ“Š Server Stats ðŸ“Š",type:discord_js_1.ChannelType.GuildCategory,permissionOverwrites:[{id:n.guildId,allow:[discord_js_1.PermissionFlagsBits.ViewChannel],deny:[discord_js_1.PermissionFlagsBits.SendMessages,discord_js_1.PermissionFlagsBits.Connect]}],position:0}),d=e=>tslib_1.__awaiter(this,void 0,void 0,(function*(){const s=yield n.guild.channels.create({name:(0,replaceAll_1.default)(e,{"{all-members}":n.guild.memberCount,"{members}":n.guild.members.cache.filter((e=>!e.user.bot)).size,"{bots}":n.guild.members.cache.filter((e=>e.user.bot)).size}),parent:o.id,type:t});i.push({id:s.id,name:e})}));try{yield d("All Members: {all-members}"),yield d("Members: {members}"),yield d("Bots: {bots}"),yield s.updateOne({$set:{statsChannels:i}}),yield n.followUp({embeds:[(new discord_js_1.EmbedBuilder).setTitle("ðŸ“Š Server Stats Channels").setDescription("Default channels have been created").setColor(e.config.GeneralSettings.EmbedColor)]})}catch(t){return e.logger.error(t),n.followUp({embeds:[(new discord_js_1.EmbedBuilder).setTitle("An error has occurred, check the console").setColor("Red")],ephemeral:!0})}}if("edit"===i){const t=n.options.getChannel("channel"),s=n.options.getString("name"),i=yield(0,querys_1.guilds)().get(n.guildId),o=i.statsChannels.find((e=>e.id===t.id));return o?(o.name=s,yield i.updateOne({$set:{statsChannels:i.statsChannels}}),n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("The channel name has been updated").setColor(e.config.GeneralSettings.EmbedColor)]})):n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("I can't find that channel in my database").setColor("Red")],ephemeral:!0})}if("delete"===i){const s=null===(t=n.options.getChannel("channel"))||void 0===t?void 0:t.id,i=yield(0,querys_1.guilds)().get(n.guildId),o=i.statsChannels.findIndex((e=>e.id===s));if(o<0)return n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("This channel is not of type statistics").setColor("Red")]});const d=i.statsChannels.filter(((e,n)=>n!==o));return yield i.updateOne({$set:{statsChannels:d}}),n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("The channel has been deleted correctly").setColor(e.config.GeneralSettings.EmbedColor)]})}if("check"===i){const t=yield(0,querys_1.guilds)().get(n.guildId);if(!(null===(s=t.statsChannels)||void 0===s?void 0:s.length))return n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("There are no statistics channels").setColor("Red")],ephemeral:!0});const i=[],o=[];for(const e of t.statsChannels){n.guild.channels.cache.get(e.id)||(i.push(`The channel ${e.name} is not in the server`),o.push(e.id))}return yield t.updateOne({$set:{statsChannels:t.statsChannels.filter((e=>!o.includes(e.id)))}}),n.reply({embeds:[(new discord_js_1.EmbedBuilder).setTitle("Stats Channels Fixed").setDescription(i.length?i.join("\n"):"There are no errors").setColor(e.config.GeneralSettings.EmbedColor)]})}}))}exports.default=new Command_1.Command({name:"manage",description:"Manage the discord bot configurations",options:[{name:"voice-channels",description:"Manage the temporary voice channels",type:discord_js_1.ApplicationCommandOptionType.SubcommandGroup,options:[{name:"send",description:"Send the temporary voice channels panel",type:discord_js_1.ApplicationCommandOptionType.Subcommand,options:[{name:"channel",description:"The channel",type:discord_js_1.ApplicationCommandOptionType.Channel,channelTypes:[discord_js_1.ChannelType.GuildText],required:!1}]},{name:"setup",description:"Create a Generator and a interface channel",type:discord_js_1.ApplicationCommandOptionType.Subcommand},{name:"delete",description:"Delete the current generator channel",type:discord_js_1.ApplicationCommandOptionType.Subcommand}]},{name:"stats",description:"Manage the status system",type:discord_js_1.ApplicationCommandOptionType.SubcommandGroup,options:[{name:"setup",description:"Sets the bot up with some base counters",type:discord_js_1.ApplicationCommandOptionType.Subcommand,options:[{name:"channel",description:"The type of channels you want to use for the counters",type:discord_js_1.ApplicationCommandOptionType.Integer,choices:[{name:"voice channel (recommended)",value:2},{name:"text channel",value:0}],required:!0}]},{name:"edit",description:"Edit the channel name for use new placeholders",type:discord_js_1.ApplicationCommandOptionType.Subcommand,options:[{name:"channel",description:"The channel to edit",type:discord_js_1.ApplicationCommandOptionType.Channel,required:!0},{name:"name",description:"The new channel name ({all-members}, {members}, {bots})",type:discord_js_1.ApplicationCommandOptionType.String,required:!0}]},{name:"delete",description:"Delete a statistics channel from the database",type:discord_js_1.ApplicationCommandOptionType.Subcommand,options:[{name:"channel",description:"The channel to be removed",type:discord_js_1.ApplicationCommandOptionType.Channel,required:!0}]},{name:"check",description:"Fix the common-errors for the statistics channels",type:discord_js_1.ApplicationCommandOptionType.Subcommand}]}],run:({client:e,interaction:n})=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){({"voice-channels":manageVoiceChannelsCategory,stats:manageStatsChannels})[n.options.getSubcommandGroup()]({client:e,interaction:n})}))});