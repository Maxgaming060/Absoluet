"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const tslib_1=require("tslib"),Dashboard_1=require("../../structures/Dashboard"),discord_js_1=require("discord.js"),welcomeCard_1=tslib_1.__importDefault(require("../../helpers/images/welcomeCard")),Command_1=require("../../structures/Command"),replaceAll_1=tslib_1.__importDefault(require("../../helpers/replaceAll")),querys_1=require("../../helpers/querys");exports.default=new Command_1.Command({name:"setup",description:"Configure your discord server",run:({interaction:e,client:t})=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){let i=yield(0,querys_1.guilds)().get(e.guildId);const s=new Dashboard_1.Dashboard({client:t}).addOptions([{name:"General Settings",description:"Configure most of the bot's options",emoji:"🛠️",settings:[{name:"Log Channel",description:"This will be the channel where they send all the logs that the bot sees",type:Dashboard_1.CategoryTypes.Channel,style:discord_js_1.ButtonStyle.Secondary,emoji:"📜",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{logChannel:e}})}))},{name:"Boost Channel",description:"This will be the channel where the bot sends the boost message",type:Dashboard_1.CategoryTypes.Channel,style:discord_js_1.ButtonStyle.Primary,emoji:"✨",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{boostChannel:e}})}))}]},{name:"Ticket Settings",description:"Change the transcript channel and max tickets",emoji:"🎫",settings:[{name:"Max tickets per user",description:"Configure the number of tickets that a user can have created at the same time",type:Dashboard_1.CategoryTypes.Number,style:discord_js_1.ButtonStyle.Primary,emoji:"👥",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"ticketConfig.maxTickets":e}})}))},{name:"Transcript Channel",description:"The channel where all ticket transcripts will be sent",type:Dashboard_1.CategoryTypes.Channel,style:discord_js_1.ButtonStyle.Secondary,emoji:"📰",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"ticketConfig.transcriptChannel":e}})}))},{name:"Transcript On Close",description:"The bot will automatically send a transcript when a ticket is deleted",type:Dashboard_1.CategoryTypes.Boolean,style:discord_js_1.ButtonStyle.Success,emoji:"🥤",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"ticketConfig.autoSaveTranscript":e}})}))},{name:"Send transcript to user",description:"Do you want the bot to send the transcript to the user's md?",type:Dashboard_1.CategoryTypes.Boolean,style:discord_js_1.ButtonStyle.Danger,emoji:"🔊",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"ticketConfig.transcriptType":e?"user":"channel"}})}))},{name:"Message Type",description:"The message use buttons or menus?",type:Dashboard_1.CategoryTypes.Questions,choices:[{name:"Buttons",value:"buttons",emoji:"✅",style:discord_js_1.ButtonStyle.Secondary},{name:"Menus",value:"menus",emoji:"📁",style:discord_js_1.ButtonStyle.Primary}],style:discord_js_1.ButtonStyle.Secondary,emoji:"🥤",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"ticketConfig.messageType":e}})}))}]},{name:"Suggestions Settings",description:"Configure the suggestion channels and more",emoji:"🔔",settings:[{name:"Channel",description:"The channel where all the suggestions will be sent once the command is used",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.Channel,emoji:"📰",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"suggestionConfig.channel":e}})}))},{name:"Upvote Emoji",description:"Change the upvote emojis from the suggestion embeds",style:discord_js_1.ButtonStyle.Success,type:Dashboard_1.CategoryTypes.String,emoji:"👍",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"suggestionConfig.upvote":e}})}))},{name:"Downvote Emoji",description:"Change the downvote emojis from the suggestion embeds",style:discord_js_1.ButtonStyle.Danger,type:Dashboard_1.CategoryTypes.String,emoji:"👎",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"suggestionConfig.downvote":e}})}))},{name:"Disable buttons",description:"Disable the buttons when a staff accepts or declines a suggestion",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.Boolean,emoji:"📁",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"suggestionConfig.disable":e}})}))}]},{name:"Welcome Settings",description:"Configure the welcome message embed and colors",emoji:"👋",settings:[{name:"Channel",description:"A message will be sent every time a person enters the server",style:discord_js_1.ButtonStyle.Secondary,type:Dashboard_1.CategoryTypes.Channel,emoji:"🦿",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"welcomeSettings.channel":e}})}))},{name:"Message",description:"You must send the embed made on our [website](https://embed.strider.top/)\n\n\t\t\t\t\t\t\t__**Placeholders available:**__\n\t\t\t\t\t\t\t• {user-tag} {user-avatar} {guild-icon} {user-id} {user-name} {guild-name} {memberCount} {createdTimestamp} {joinedTimestamp} {inviter-mention} {inviter-tag} {inviter-name} {inviter-id} {code} {card-url} {invites}",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.WebsiteEmbed,emoji:"📜",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"welcomeSettings.message":e}})})),fetch:()=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){i=yield(0,querys_1.guilds)().get(e.guildId);const{welcomeSettings:s}=i,o=e.member,n=[];if(JSON.stringify(s.message).includes("{card-url}")){const e=yield(0,welcomeCard_1.default)(o);n.push(new discord_js_1.AttachmentBuilder(e,{name:"welcome-card.jpg"}))}const a={"{user-tag}":o.user.tag,"{user-avatar}":o.user.displayAvatarURL(),"{guild-icon}":o.guild.iconURL(),"{user-id}":o.id,"{user-name}":o.user.username,"{guild-name}":o.guild.name,"{memberCount}":o.guild.memberCount,"{createdTimestamp}":Math.floor(o.user.createdTimestamp/1e3),"{joinedTimestamp}":Math.floor(o.joinedTimestamp/1e3),"{inviter-mention}":`<@!${t.user.id}>`,"{inviter-tag}":`${t.user.tag||"Unknown#0001"}`,"{inviter-name}":`${t.user.username||"Unknown"}`,"{inviter-id}":`${t.user.id}`,"{code}":"VPemjmcM","{card-url}":"attachment://welcome-card.jpg","{invites}":12};return{data:(0,replaceAll_1.default)(s.message,a),attachments:n}}))},{name:"Auto-Role",description:"Give a role(s) to the user when he enters the server",style:discord_js_1.ButtonStyle.Success,type:Dashboard_1.CategoryTypes.Roles,emoji:"⛏",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"welcomeSettings.autoRoles":e}})}))}]},{name:"Goodbye Settings",description:"Configure the goodbye message embed and colors",emoji:"⛩️",settings:[{name:"Channel",description:"A message will be sent every time a person leave the server",style:discord_js_1.ButtonStyle.Secondary,type:Dashboard_1.CategoryTypes.Channel,emoji:"🦿",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"goodbyeSettings.channel":e}})}))},{name:"Message",description:"You must send the embed made on our [website](https://embed.strider.top/)\n\n\t\t\t\t\t\t\t__**Placeholders available:**__\n\t\t\t\t\t\t\t• {user-tag} {user-avatar} {user-id} {user-name} {guild-icon} {guild-name} {memberCount} {joinedTimestamp}",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.WebsiteEmbed,maxLength:2048,emoji:"📜",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"goodbyeSettings.message":e}})}))}]},{name:"Verification Settings",description:"Configure the verification settings",emoji:"🛡️",settings:[{name:"Role",description:"When a user is verified this will be the role that will be given",emoji:"👤",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.Role,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"verifySettings.roleId":e}})}))},{name:"Type",description:"The type of verification to be used",emoji:"🎨",style:discord_js_1.ButtonStyle.Secondary,type:Dashboard_1.CategoryTypes.Questions,choices:[{name:"Captcha",emoji:"👮‍♂️",style:discord_js_1.ButtonStyle.Primary,value:"captcha"},{name:"Direct",emoji:"✈",style:discord_js_1.ButtonStyle.Secondary,value:"direct"}],save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"verifySettings.type":e}})}))}]},{name:"Levels Settings",description:"Configure the levels settings",emoji:"✨",settings:[{name:"Max XP",description:"The maximum xp that a user can earn per message",style:discord_js_1.ButtonStyle.Secondary,type:Dashboard_1.CategoryTypes.Number,emoji:"⬆️",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){i.updateOne({$set:{"levelsConfig.max":e}})}))},{name:"Min XP",description:"The minimum xp that a user can earn per message",style:discord_js_1.ButtonStyle.Secondary,type:Dashboard_1.CategoryTypes.Number,emoji:"⬇️",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){i.updateOne({$set:{"levelsConfig.min":e}})}))},{name:"LevelUp Channel",description:"This will be the channel where the bot sends the level up message",type:Dashboard_1.CategoryTypes.Channel,style:discord_js_1.ButtonStyle.Secondary,emoji:"🏆",save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{levelUpChannel:e}})}))}]},{name:"Filters Settings",description:"Configure the filters settings",emoji:"🕵",settings:[{name:"Anti-Links",description:"Check if the user send links",emoji:"🔗",style:discord_js_1.ButtonStyle.Secondary,type:Dashboard_1.CategoryTypes.Boolean,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"filtersConfig.links":e}})}))},{name:"Anti-Invites",description:"Check if the user send a discord invite",emoji:"⚠",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.Boolean,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"filtersConfig.invites":e}})}))},{name:"Anti-Ghost Ping",description:"Check if the user ghost ping",emoji:"🔉",style:discord_js_1.ButtonStyle.Primary,type:Dashboard_1.CategoryTypes.Boolean,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"filtersConfig.ghostPing":e}})}))},{name:"Bypass Roles",description:"The roles that can send invites/links without being affected by the system",emoji:"👥",style:discord_js_1.ButtonStyle.Success,type:Dashboard_1.CategoryTypes.Roles,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"filtersConfig.bypassRoles":e}})}))},{name:"In Tickets",description:"Enable/Disable the check filter in tickets",emoji:"🎫",style:discord_js_1.ButtonStyle.Danger,type:Dashboard_1.CategoryTypes.Boolean,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"filtersConfig.inTickets":e}})}))}]},{name:"Economy Settings",description:"Configure the economy settings",emoji:"💰",settings:[{name:"Coin",emoji:"🪙",description:"Emoji that will be used as currency in this system",type:Dashboard_1.CategoryTypes.String,style:discord_js_1.ButtonStyle.Secondary,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"economyConfig.coin":e}})}))},{name:"Daily Reward",emoji:"👑",description:"Reward that will be given to users who claim it every 24 hours",type:Dashboard_1.CategoryTypes.String,style:discord_js_1.ButtonStyle.Primary,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"economyConfig.dailyReward":e}})}))},{name:"Weekly Reward",emoji:"📅",description:"Reward that will be given to users who claim it every 7 days",type:Dashboard_1.CategoryTypes.String,style:discord_js_1.ButtonStyle.Success,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"economyConfig.weeklyReward":e}})}))},{name:"Max Money",emoji:"📤",description:"Maximum money that can be earned with the work command",type:Dashboard_1.CategoryTypes.String,style:discord_js_1.ButtonStyle.Primary,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"economyConfig.maxMoney":e}})}))},{name:"Min Money",emoji:"📥",description:"Minimum money that can be earned with the work command",type:Dashboard_1.CategoryTypes.String,style:discord_js_1.ButtonStyle.Danger,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"economyConfig.minMoney":e}})}))},{name:"Blackjack Reward",emoji:"🃏",description:"Multiplier of the money beat using",type:Dashboard_1.CategoryTypes.Number,style:discord_js_1.ButtonStyle.Success,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"economyConfig.blackjackReward":e}})}))}]},{name:"Starboard Settings",description:"Configure the starboard settings",emoji:"⭐",settings:[{name:"Enabled",emoji:"✔",description:"Enable/Disable the starboard",type:Dashboard_1.CategoryTypes.Boolean,style:discord_js_1.ButtonStyle.Primary,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"starboardConfig.enabled":e}})}))},{name:"Channel",emoji:"📢",description:"The channel where the starboard will be sent",type:Dashboard_1.CategoryTypes.Channel,style:discord_js_1.ButtonStyle.Primary,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"starboardConfig.channel":e}})}))},{name:"Min Stars",emoji:"⭐",description:"Minimum amount of stars needed to post in the starboard",type:Dashboard_1.CategoryTypes.Number,style:discord_js_1.ButtonStyle.Primary,save:e=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){yield i.updateOne({$set:{"starboardConfig.minStars":e}})}))}]}]);yield s.setup(e)}))});